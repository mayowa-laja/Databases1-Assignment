
-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-12-11 21:06:39 GMT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c


DROP VIEW locations_of_staff_restaurant;
 
DROP TABLE bookingreceipt CASCADE CONSTRAINTS;

DROP TABLE customer CASCADE CONSTRAINTS;

DROP TABLE guest CASCADE CONSTRAINTS;

DROP TABLE restaurant CASCADE CONSTRAINTS;

DROP TABLE staff CASCADE CONSTRAINTS;

DROP TABLE tables CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE bookingreceipt (
    bookingid       NUMBER(7) NOT NULL,
    time            DATE NOT NULL,
    bookingduration NUMBER(4, 1) NOT NULL,
    noofpeople      NUMBER(9, 2) NOT NULL,
    tableid         NUMBER(7) NOT NULL,
    managerid       NUMBER(7) NOT NULL,
    waiterid        NUMBER(7) NOT NULL
)
LOGGING;

ALTER TABLE bookingreceipt ADD CONSTRAINT bookingreceipt_bookduration CHECK ( bookingduration <= 120 );

ALTER TABLE bookingreceipt ADD CONSTRAINT bookingreceipt_noofpeople CHECK ( noofpeople <= 6 );

ALTER TABLE bookingreceipt ADD CONSTRAINT bookingreceipt_pk PRIMARY KEY ( bookingid );

CREATE TABLE customer (
    id        NUMBER(7) NOT NULL,
    name      VARCHAR2(30) NOT NULL,
    address   VARCHAR2(50) NOT NULL,
    email     VARCHAR2(30) NOT NULL,
    age       NUMBER(3) NOT NULL,
    bookingid NUMBER(7) NOT NULL
)
LOGGING;

ALTER TABLE customer ADD CONSTRAINT customer_age CHECK ( age >= 18 );

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( id );

CREATE TABLE guest (
    guestid     NUMBER(7) NOT NULL,
    tableid     NUMBER(7) NOT NULL,
    name        VARCHAR2(30) NOT NULL,
    email       VARCHAR2(30) NOT NULL,
    address     VARCHAR2(50) NOT NULL,
    phonenumber VARCHAR2(50) NOT NULL,
    timespent   NUMBER(4, 1) NOT NULL,
    fine        NUMBER(9, 2)
)
LOGGING;

ALTER TABLE guest ADD CONSTRAINT guest_guestid_un PRIMARY KEY ( guestid );

CREATE TABLE restaurant (
    id          NUMBER(7) NOT NULL,
    address     VARCHAR2(50) NOT NULL,
    phonenumber VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE restaurant ADD CONSTRAINT restaurant_pk PRIMARY KEY ( id );

CREATE TABLE staff (
    id           NUMBER(7) NOT NULL,
    name         VARCHAR2(30) NOT NULL,
    address      VARCHAR2(50) NOT NULL,
    phonenumber  VARCHAR2(50) NOT NULL,
    email        VARCHAR2(30) NOT NULL,
    dob          DATE NOT NULL,
    startdate    DATE NOT NULL,
    stafftype    VARCHAR2(50) NOT NULL,
    restaurantid NUMBER(7) NOT NULL
)
LOGGING;

ALTER TABLE staff ADD CONSTRAINT staff_email CHECK ( email LIKE '%@burgershack.com' );

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( id );

CREATE TABLE tables (
    tableid   NUMBER(7) NOT NULL,
    tabletype VARCHAR2(50) NOT NULL,
    location  VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE tables ADD CONSTRAINT tables_pk PRIMARY KEY ( tableid );

ALTER TABLE bookingreceipt
    ADD CONSTRAINT bookingreceipt_manager_fk FOREIGN KEY ( managerid )
        REFERENCES staff ( id )
    NOT DEFERRABLE;

ALTER TABLE bookingreceipt
    ADD CONSTRAINT bookingreceipt_tables_fk FOREIGN KEY ( tableid )
        REFERENCES tables ( tableid )
    NOT DEFERRABLE;

ALTER TABLE bookingreceipt
    ADD CONSTRAINT bookingreceipt_waiter_fk FOREIGN KEY ( waiterid )
        REFERENCES staff ( id )
    NOT DEFERRABLE;

ALTER TABLE customer
    ADD CONSTRAINT customer_bookingreceipt_fk FOREIGN KEY ( bookingid )
        REFERENCES bookingreceipt ( bookingid )
    NOT DEFERRABLE;

ALTER TABLE guest
    ADD CONSTRAINT guest_tables_fk FOREIGN KEY ( tableid )
        REFERENCES tables ( tableid )
    NOT DEFERRABLE;

ALTER TABLE staff
    ADD CONSTRAINT staff_restaurant_fk FOREIGN KEY ( restaurantid )
        REFERENCES restaurant ( id )
    NOT DEFERRABLE;

--insert into restaurant values (id, address, phonenumber) 

insert into restaurant values (1, 'Balbriggan', '362-644-4334');
insert into restaurant values (2, 'Skerries', '224-615-4415');
insert into restaurant values (3, 'Finglass', '242-605-4877');
insert into restaurant values (4, 'Lucan', '265-433-8593');
insert into restaurant values (5, 'Rush', '475-758-8752');

--insert into tables values (tableid, tabletype, location)

insert into tables values (1, '2 seater', 'window');
insert into tables values (2, '4 seater', 'interior');
insert into tables values (3, '6 seater', 'window');
insert into tables values (4, '8 seater', 'interior');
insert into tables values (5, '6 seater', 'interior');

--insert into staff values (id, name, address, phonenumber, email, dob(yyyy/mm/dd), startdate(yyyy/mm/dd), stafftype, restaurant_id );

insert into staff values (1, 'joey mcdonnel', '3071 Hillcrest Drive','432-227-3084', 'joeyTheMc@burgershack.com', to_date('1997/06/05', 'yyyy/mm/dd'), to_date('2020/07/15', 'yyyy/mm/dd'), 'Manager', 1 );
insert into staff values (2, 'Rajneesh Holland', '3122 Raccoon Run','262-605-4415', 'raj@burgershack.com', to_date('1998/06/05', 'yyyy/mm/dd'), to_date('2021/03/25', 'yyyy/mm/dd'), 'Manager', 2 );
insert into staff values (3, 'Ava Cartwright', '3440 August Lane','212-590-9361', 'Ava@burgershack.com', to_date('1999/06/05', 'yyyy/mm/dd'), to_date('2019/02/14', 'yyyy/mm/dd'), 'Waiter', 1 );
insert into staff values (4, 'Elisa Howse', '731 Petunia Way','559-340-2072', 'ElisaHowse@burgershack.com', to_date('1998/06/05', 'yyyy/mm/dd'), to_date('2020/05/28', 'yyyy/mm/dd'), 'Waiter', 2 );
insert into staff values (5, 'Nest Hristov', '1721 Scenicview Drive','229-896-8372', 'birdman@burgershack.com', to_date('2000/06/05', 'yyyy/mm/dd'), to_date('2021/02/27', 'yyyy/mm/dd'), 'Waiter', 3);

--insert into bookingreceipt values (bookingid, time, bookingduration, noofpeople, tableid, managerid, waiterid);

insert into bookingreceipt values (1, to_date('2021/12/06', 'yyyy/mm/dd'), 100, 5, 3, 2, 5);
insert into bookingreceipt values (2, to_date('2021/12/07', 'yyyy/mm/dd'), 50, 2, 1, 1, 3);
insert into bookingreceipt values (3, to_date('2021/12/08', 'yyyy/mm/dd'), 30, 4, 2, 1, 4);
insert into bookingreceipt values (4, to_date('2021/12/09', 'yyyy/mm/dd'), 110, 6, 5, 2, 3);
insert into bookingreceipt values (5, to_date('2021/12/10', 'yyyy/mm/dd'), 20, 1, 1, 1, 5);

--insert into customer values (id, name, address, email, age, bookingid);
insert into customer values (1, 'John Doe', '3 Bothar Na Tra', 'johndoe@gmail.com', 50, 1);
insert into customer values (2, 'Jane Doe', '14 Aungier Street', 'janed@gmail.com', 47, 2);
insert into customer values (3, 'Colin Woods', '148 Park Avenue', 'colinw@gmail.com', 24, 3);
insert into customer values (4, 'Fred Harris', '78 Elm Street', 'fredharris@gmail.com', 19, 4);
insert into customer values (5, 'Michael Donovan', '375 Seaview Rise', 'mdonovan@gmail.com', 37, 5);

--insert into guest values (guestid, tableid, name, email, address, phonenumber, timespent, fine);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (6, 3, 'Gaz Anker', 'gazza@gmail.com', '695 Marshall Drive', '758-111-2456', 130);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (7, 3, 'Varvara Wilkinson', 'varvaraw@gmail.com', '539 East Green Lake Drive', '256-426-7788', 120);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (8, 3, 'Alek Cipriani', 'alekcip@gmail.com', '572 Maple Drive', '411-369-7534', 90);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (9, 3, 'Nina Altena', 'ninaalt@gmail.com', '989 Water Street', '456-123-8409', 40);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (10, 1, 'Makenna Clifton', 'makennaclif@gmail.com', '683 Pineknoll Street', '017-796-4352', 30);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (11, 2, 'Nuallan Fylan', 'nuallan@gmail.com', '11 Lawrence Drive', '798-121-3344', 20);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (12, 2, 'Ikechukwu Altink', 'ikealtwink@gmail.com', '479 SW Jennings Drive', '796-368-2154', 15);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (13, 2, 'Selig Sturm', 'seligs@gmail.com', '3 Stillwater Drive', '474-881-2165', 25);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (14, 5, 'Adnas Hermans', 'adnanh@gmail.com', '354 Tallwood Road', '587-965-7791', 100);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (15, 5, 'Angelina Dunn', 'angelinad@gmail.com', '8091 Prairie Road', '126-444-5136', 105);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (16, 5, 'Kirsten Kiss', 'kirstenk@gmail.com', '577 Wentworth Road', '141-264-7330', 95);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (17, 5, 'Eleonoora Mah', 'elemah@gmail.com', '7662 Pheasant Avenue', '256-888-1414', 40);
insert into guest (guestid, tableid, name, email, address, phonenumber, timespent) values (18, 5, 'Abisai Chevrolet', 'abichev@gmail.com', '8380 South Avenue', '444-878-9025', 50);

-- updates the customers fine to be the amount they need to pay based on the minutes over 120 (macximum unfinable stay)
UPDATE guest
SET fine = 5 * (timespent-120)
WHERE timespent > 120;


select * from bookingreceipt;
select * from tables;
select * from customer;
select * from guest;
select * from staff;
select * from restaurant;



--Update using a subquery
UPDATE Customer
SET age = 22
WHERE id = (SELECT id FROM customer WHERE name = 'Colin Woods');

-- case displays whether a bookingid had a fine or not --
SELECT (CASE 
WHEN bookingduration > 119 THEN 'has fine' 
WHEN bookingduration < 120  THEN 'no fine'
end)  FROM bookingreceipt;

--INNER join using a GROUP function, shows how many guests were at each table altogether
SELECT count(guestid), tableid FROM guest inner join bookingreceipt using(tableid)
group by tableid;

-- left outer join diplaying the tables workers have served ---
SELECT waiterid FROM  bookingreceipt LEFT JOIN tables ON bookingreceipt.tableid = tables.tableid;

--Right OUTER JOIN, displaying the location of the restaurants the staff work at
SELECT name, stafftype, restaurant.address FROM staff right outer join restaurant on staff.restaurantid = restaurant.id;

-- union displays managers in charge for when cutomers stay is over or under max stay --
SELECT id FROM staff UNION SELECT managerid FROM bookingreceipt where bookingduration > 120;

--Intersect displaying all the tables that were used by guests
SELECT tableid
FROM bookingreceipt
INTERSECT
SELECT tableid
FROM guest;


-- creates view and displaying the location of the restaurants the staff work at
CREATE VIEW locations_of_staff_restaurant AS SELECT name, stafftype, restaurant.address FROM staff right outer join restaurant on staff.restaurantid = restaurant.id;

SELECT * FROM locations_of_staff_restaurant;
